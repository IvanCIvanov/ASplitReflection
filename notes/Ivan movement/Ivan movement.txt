
var on_ground = place_meeting(x, y + 1, obj_floor);
var jump_pressed = keyboard_check_pressed(vk_up);
var jump_held = keyboard_check(vk_up);
var jump_released = keyboard_check_released(vk_up);



if (keyboard_check_pressed(vk_up)) {
	    if (place_meeting(x, y+1, obj_floor)) {
	        vspeed = jump_height;
	    }else{
			vspeed = 0;
		}
	}

	// Gravity
	if (!place_meeting(x, y+1, obj_floor)) {
	    gravity = 0.25; 
	}else{gravity = 0;}

	// Limit fall speed
	vspeed = min(vspeed, 12);


	// Collisions on Left/Right
	if (keyboard_check(vk_left) && !place_meeting(x-move_speed,y,obj_floor)) {
	    x -= move_speed;
	    image_xscale = -1;
	}
	if (keyboard_check(vk_right) && !place_meeting(x+move_speed,y,obj_floor)) {
	    x += move_speed;
	    image_xscale = 1;
	}
	
	if(place_meeting(x-move_speed, y, obj_floor)){
		x += move_speed;
	}
	if(place_meeting(x+move_speed, y, obj_floor)){
		x -= move_speed;
	}


if (place_meeting(x, y + vspeed, obj_floor)) {
	while (!place_meeting(x, y + sign(vspeed), obj_floor)) {
		y += sign(vspeed);
	}
	
	// Stop moving
	vspeed = 0;
}


#region Spritesetting

if (vspeed > 0 && !on_ground) {
    sprite_index = spr_playerFall;
}
else if (vspeed < 0 && !on_ground) {
    sprite_index = spr_playerJump;
}
else if (hspeed != 0 && on_ground) {
    sprite_index = spr_playerIdle; // replace this with run animation later
}
else {
    sprite_index = spr_playerIdle;
}

#endregion